{"version":3,"sources":["utils/style/colors.js","utils/style/GlobalStyle.jsx","assets/images/argentBankLogo.png","features/fetchUpdateUser.js","features/fetchToken.js","utils/functions/capitalize.js","utils/selectors.js","components/HeaderNav.jsx","features/theme.js","components/Footer.jsx","assets/images/bank-tree.jpeg","components/Hero.jsx","data/data.js","assets/images/icon-chat.png","assets/images/icon-money.png","assets/images/icon-security.png","components/Feature.jsx","pages/WelcomePage.jsx","utils/loader/loadingIcon.jsx","pages/SignIn.jsx","components/Transactions.jsx","utils/functions/Notify.jsx","pages/User.jsx","pages/Error.jsx","App.js","reportWebVitals.js","utils/store/store.js","index.js"],"names":["colors","primary","secondary","tertiary","mainBackground","mainBackgroundDarkMode","darkModeHighlights","warning","activeA","aLink","itemTitle","StyledGlobalStyle","createGlobalStyle","isDarkMode","GlobalStyle","theme","useSelector","state","store","token","a","dispatch","fetching","axios","post","headers","response","data","body","user","resolved","rejected","message","firstName","lastName","updateSending","put","updateSuccess","updateFail","userSlice","createSlice","name","initialState","isLoading","isUpdated","isError","reducers","draft","action","payload","resetUser","actions","email","password","tokenSlice","isLoggedIn","resetToken","capitalize","string","toUpperCase","slice","selectTheme","selectToken","selectUser","userStats","MainNavLogo","styled","img","MainNav","nav","MainNavA","NavLink","props","activeClassName","UserName","span","Header","capitalizedFirst","useDispatch","to","className","src","logo","alt","onClick","themeSlice","toggle","FOOTER","footer","FooterText","p","NightModeButton","button","Footer","HeroContainer","section","heroImg","HeroContent","article","HeroSubtitle","HeroText","Hero","featureData","id","icon","altText","title","content","AccountData","amount","description","Features","FeaturesItem","FeaturesIcon","FeatureItemTitle","h3","Feature","map","MAIN","main","WelcomePage","useEffect","document","rotate","keyframes","LoaderWrapper","div","Loader","LoadingIcon","SignInContent","InputWrapper","InputRemember","ErrorMsg","SignInButton","SignIn","useState","setEmail","setPassword","rememberMe","setRememberMe","useStore","localStorage","getItem","onSubmit","event","preventDefault","setItem","fetchToken","htmlFor","type","autoComplete","value","onChange","e","target","disabled","checked","Account","AccountWrapper","AccountTitle","AccountAmount","AccountAmountDescription","AccountWrapperCta","TransactionButton","Transactions","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","Wrapper","Notify","visible","setVisible","setTimeout","delay","children","UserInfo","EditButton","EditContent","Form","form","ButtonWrapper","EditButtons","h1","User","newFirst","setNewFirst","newLast","setnewLast","canEdit","setCanEdit","submitted","setSubmitted","inputOk","setInputOk","capitalizedLast","fetchUser","Fragment","trim","updateUser","placeholder","ErrorWrapper","ReturnLink","Link","Error","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","tokenReducer","userReducer","themeReducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1d3adf5a.chunk.js","sourcesContent":["// colors used on the website\n\nconst colors = {\n  primary: '#00bc77',\n  secondary: '#000',\n  tertiary: '#fff',\n  mainBackground: '#12002b',\n  mainBackgroundDarkMode: '#2F2E41',\n  darkModeHighlights: '#4F4C6B',\n  warning: 'red',\n  \n  // Link\n  activeA: '#42b983',\n  aLink: '#2c3e50',\n\n  // Feature\n  itemTitle: '#222',\n\n}\n\nexport default colors\n","import { createGlobalStyle } from 'styled-components'\nimport { useSelector } from 'react-redux'\nimport colors from './colors'\n\n/**\n * CSS Global styles for the site using styled.components\n */\n const StyledGlobalStyle = createGlobalStyle`\n html {\n   box-sizing: border-box;\n   font-family: Avenir, Helvetica, Arial, sans-serif;\n   -webkit-font-smoothing: antialiased;\n   -moz-osx-font-smoothing: grayscale;\n   text-align: center;\n   color: ${colors.aLink};\n }\n\n body {  \n  background-color: ${({ isDarkMode }) => (isDarkMode ? `${colors.darkModeHighlights}` : `${colors.tertiary}`)};\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  -webkit-font-smoothing: antialiased;\n  color: ${({ isDarkMode }) => (isDarkMode ? `${colors.tertiary}` : `${colors.secondary}`)};\n } \n\n .main {\n    flex: 1;\n}\n \n .sr-only {\n   border: 0 !important;\n   clip: rect(1px, 1px, 1px, 1px) !important; /* 1 */\n   -webkit-clip-path: inset(50%) !important;\n   clip-path: inset(50%) !important; /* 2 */\n   height: 1px !important;\n   margin: -1px !important;\n   overflow: hidden !important;\n   padding: 0 !important;\n   position: absolute !important;\n   width: 1px !important;\n   white-space: nowrap !important; /* 3 */\n }\n`;\n\n/**\n * @function GlogalStyle\n * @returns global theme css styling (either for day or night depending on state)\n */\nfunction GlobalStyle() {\n  const theme = useSelector((state) => state.theme)\n  \n  return <StyledGlobalStyle isDarkMode={theme === 'dark'} />\n}\n\nexport default GlobalStyle","export default __webpack_public_path__ + \"static/media/argentBankLogo.e031a16c.png\";","// import axios\nimport axios from 'axios'\n// redux tool kit function\nimport { createSlice } from '@reduxjs/toolkit'\n\n/**\n * API call\n * Using the retrieved 'token' for authentication \n * the function retrieves the user's name\n * @function fetchUser\n * @param {object} store \n * @param {string} token\n * @returns {object|string} user information or error message to store\n */\n export async function fetchUser(store, token) {\n  // start the request\n    store.dispatch(fetching())\n  try {\n    // use axios to make the query\n    const response = await axios.post('http://localhost:3001/api/v1/user/profile', \n    {}, \n    {\n      headers: { 'Authorization': `Bearer ${token}` }\n    })\n    const user = await response.data.body\n    // if request resolved then save the user in the store\n     store.dispatch(resolved(user))\n  } catch (error) {\n    // otherwise request rejected with corresponding error mesage\n    store.dispatch(rejected(error.response.data.message))\n  }\n}\n\n/**\n * API call\n * Using the retrieved 'token' for authentication \n * the function updates the user name\n * @function updateUser\n * @param {object} store \n * @param {string} token\n * @param {string} new first name\n * @param {string} new last name\n * @returns {object} user's new name to store or nothing\n */\n export async function updateUser(store, token, firstName, lastName) {\n  // start the update request\n    store.dispatch(updateSending())\n  try {\n    // use axios to make the query\n    const response = await axios.put('http://localhost:3001/api/v1/user/profile', \n    {\n      firstName, lastName\n    }, \n    {\n      headers: { 'Authorization': `Bearer ${token}`}\n    })\n    const user = await response.data.body\n    // if request update resolved then save the user in the store\n     store.dispatch(updateSuccess(user))\n  } catch (error) {\n    // otherwise update request rejected\n    store.dispatch(updateFail())\n  }\n}\n\n/**\n * Unify actions and reducers with Redux-Toolkit slices\n * instead of createAction & createReducer\n * create actions & reducer logic regarding user retrieval/updating\n * @function userSlice\n * @param {object} state\n * @param {string} action\n * @returns {object} new state\n */\n const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    isLoading: false,\n    isUpdated: false,\n    user: {},\n    isError: '',\n  },\n  // reducers allows to define the actions and the reducer\n  reducers: {\n    fetching: (draft) => {\n        draft.isLoading = true\n    },\n    resolved: (draft, action) => {\n        draft.isLoading = false\n        draft.user = action.payload\n        draft.isError = ''\n    },\n    rejected:  (draft, action) => {\n        draft.isLoading = false\n        draft.user = {}\n        draft.isError = action.payload\n    },\n    // for user name updating\n    updateSending: (draft) => {\n        draft.isLoading = true\n    },\n    updateSuccess: (draft, action) => {\n        draft.isLoading = false\n        draft.isUpdated = true\n        draft.user = action.payload\n        draft.isError = ''\n    },\n    updateFail: (draft) => {\n        draft.isLoading = false\n        draft.isUpdated = false\n        // draft.isError = action.payload\n    },\n    // for user logout\n    resetUser: (draft) => {\n        draft.isLoading = false\n        draft.isUpdated = false\n        draft.user = {}\n        draft.isError = ''\n    },\n  },\n})\n\n// export each action & reducer\nexport const { fetching, resolved, rejected, updateSending, updateSuccess, updateFail, resetUser } = userSlice.actions\nexport default userSlice.reducer","// import axios\nimport axios from 'axios'\n// redux tool kit function\nimport { createSlice } from '@reduxjs/toolkit'\n\n/**\n * API call\n * Checks if user exists in the database & if true returns a 'token'\n * @function fetchToken\n * @param {object} store \n * @param {string} email \n * @param {string} password \n * @returns {string} token or error message to store\n */\nexport async function fetchToken(store, email, password) {\n  // start the request\n    store.dispatch(fetching())\n  try {\n    // use axios to make the query\n    const response = await axios.post('http://localhost:3001/api/v1/user/login', \n    {\n      email, password\n    })\n    const token = await response.data.body.token\n    // if request resolved then save the token in the store\n     store.dispatch(resolved(token))\n   } catch (error) {\n    // otherwise request rejected: with relevant error message\n      if (!error.response) {\n        // network error\n        store.dispatch(rejected('There is a Network Error !'))\n    } else {\n        store.dispatch(rejected(error.response.data.message))\n    }\n  }\n}\n\n/**\n * Unify actions and reducers with Redux-Toolkit slices\n * instead of createAction & createReducer\n * create actions & reducer logic regarding token retrieval\n * @function tokenSlice\n * @param {object} state\n * @param {string} action\n * @returns {object} new state\n */\nconst tokenSlice = createSlice({\n  name: 'token',\n  initialState: {\n    isLoading: false,\n    isLoggedIn: false,\n    token: null,\n    isError: '',\n  },\n  // reducers allows to define the actions and the reducer\n  reducers: {\n    fetching: (draft) => {\n        draft.isLoading = true\n    },\n    resolved: (draft, action) => {\n        draft.isLoading = false\n        draft.isLoggedIn = true\n        draft.token = action.payload\n        draft.isError = ''\n    },\n    rejected: (draft, action) => {\n        draft.isLoading = false\n        draft.isLoggedIn = false\n        draft.token = null\n        draft.isError = action.payload\n    },\n    resetToken: (draft) => {\n        draft.isLoading = false\n        draft.isLoggedIn = false\n        draft.token = null\n        draft.isError = ''\n    },\n  },\n})\n\n// export each action & reducer\nexport const { fetching, resolved, rejected, resetToken } = tokenSlice.actions\nexport default tokenSlice.reducer\n","/**\n * Capitalizes the first letter of a given string\n * @function capitalize\n * @param {string} string \n * @returns {string} string \n */\nexport const capitalize = (string) => {\n  return string && string[0].toUpperCase() + string.slice(1);\n}\n\n","// exported selectors used with the useSelector hook\n\nexport const selectTheme = (state) => state.theme\nexport const selectToken = (state) => state.token\nexport const selectUser = (state) => state.userStats","import { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\n// styling\nimport styled from 'styled-components'\nimport colors from '../utils/style/colors'\n// logo import\nimport logo from '../assets/images/argentBankLogo.png'\n// import actions\nimport { resetUser } from '../features/fetchUpdateUser'\nimport { resetToken } from '../features/fetchToken'\n// import helper function\nimport { capitalize } from '../utils/functions/capitalize'\n// import selectors\nimport { selectTheme, selectToken, selectUser } from '../utils/selectors'\n\n/**\n * CSS for the component using styled.components\n */\nconst MainNavLogo = styled.img`\n  display: flex;\n  align-items: center;\n  max-width: 100%;\n  width: clamp(10rem, 13vw, 12.5rem);\n  border: ${({ theme }) => (theme === 'light' ? `1px solid ${colors.tertiary}` : `1px solid ${colors.primary}`)};\n`;\n\nconst MainNav = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.313rem 0.5rem; \n  font-size: clamp(0.9rem, 1.4vw, 1.2rem);\n  i {\n    margin-right: 0.313rem;\n    font-size: clamp(1rem, 1.4vw, 1.2rem);\n  }\n`;\n\nconst MainNavA = styled(NavLink)`\n  color: ${({ theme }) => (theme === 'light' ? `${colors.aLink}` : `${colors.tertiary}`)};\n  font-weight: bold;\n  text-decoration: none;\n  margin-right: 0.5rem;\n\n  &.${(props) => props.activeClassName} {\n    color: ${colors.activeA};\n  }\n  &:hover {\n    color: ${colors.activeA};\n    text-decoration: underline;\n  }\n`;\n\nconst UserName = styled.span`\n  display: block;\n  @media (min-width: 425px) {\n    display: inline-block;\n  }\n`;\n\n/**\n * Renders the Header\n * @function Header\n * @returns (JSX)\n */\nconst Header = () => {\n\n  // retrieve Redux states\n  const theme = useSelector(selectTheme)\n  const isLoggedIn = useSelector(selectToken).isLoggedIn\n  const firstName = useSelector(selectUser).user.firstName\n\n  // ensure first letter of name capitalised\n  const capitalizedFirst = capitalize(firstName)\n  const dispatch = useDispatch()\n  \n  return (\n    <MainNav>\n      <MainNavA to=\"/\"><MainNavLogo theme={theme} className=\"logo\" src={logo} alt=\"Argent Bank\"></MainNavLogo>\n          <h1 className=\"sr-only\">Argent Bank</h1></MainNavA>\n      {!isLoggedIn ? \n        ( \n        <MainNavA theme={theme} activeClassName=\"active\" to=\"/signin\"><i className=\"fa fa-user-circle\"></i>Sign In</MainNavA> \n        ) : \n        ( <div>\n            <UserName>\n              <MainNavA theme={theme} activeClassName=\"active\" to=\"/user\"><i className=\"fa fa-user-circle\"></i>{capitalizedFirst}</MainNavA>\n            </UserName>\n            <MainNavA theme={theme} to=\"/\" \n            onClick={() => { dispatch(resetUser()); dispatch(resetToken());}}>\n              <i className=\"fa fa-sign-out\"></i>Sign Out</MainNavA> \n          </div>\n        )}\n    </MainNav>\n  )\n}\n\nexport default Header\n","import { createSlice } from '@reduxjs/toolkit'\n\n /**\n * create actions & reducer logic regarding dark/light mode toggle\n * @function themeSlice\n * @param {object} state\n * @param {string} action\n * @returns {object} new state\n */\nconst themeSlice = createSlice({\n    name: 'theme',\n    initialState: 'light',\n    // reducers allows to define the actions and the reducer\n    reducers: {\n        toggle: (state) => {\n            return state === 'light' ? 'dark' : 'light'\n        },\n    },\n})\n\n// export each action & reducer\nexport const { toggle } = themeSlice.actions\nexport default themeSlice.reducer","import { useDispatch, useSelector } from 'react-redux'\n// styling\nimport styled from 'styled-components'\nimport colors from '../utils/style/colors'\n// import action\nimport { toggle } from '../features/theme'\n// import selector\nimport { selectTheme } from '../utils/selectors'\n\n/**\n * CSS for the component using styled.components\n */\n const FOOTER = styled.footer`\n  // display: flex;\n  // justify-content: center;\n  border-top: 2px solid #ccc;\n  padding: 2rem 0 1.5rem;\n`;\n\nconst FooterText = styled.p`\n  margin: 0;\n  padding: 0;\n`;\n\nconst NightModeButton = styled.button`\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  color: ${({ theme }) => (theme === 'light' ? `${colors.itemTitle}` : `${colors.tertiary}`)};  \n`;\n\n/**\n * Renders the footer on each page\n * Also contains button to toggle light/dark mode\n * @function Footer\n * @returns {JSX}\n */\n const Footer = () => {\n\n   // retrieve Redux state\n   const theme = useSelector(selectTheme)\n\n  const dispatch = useDispatch()\n\n  return (\n    <FOOTER>\n      <FooterText>Copyright 2020 Argent Bank</FooterText>\n      <NightModeButton theme={theme} onClick={() => dispatch(toggle())}>\n            Change mode : {theme === 'light' ? '☀️' : '🌙'}\n        </NightModeButton>\n    </FOOTER>\n  )\n}\n\nexport default Footer","export default __webpack_public_path__ + \"static/media/bank-tree.4d59987c.jpeg\";","import { useSelector} from 'react-redux'\n// styling\nimport styled from 'styled-components'\nimport colors from '../utils/style/colors'\n// hero banner background\nimport heroImg from '../assets/images/bank-tree.jpeg'\n// import selector\nimport { selectTheme } from '../utils/selectors' \n\n/**\n * CSS for the component using styled.components\n */\nconst HeroContainer = styled.section`\n  background-image: url(${heroImg});\n  background-position: 0 -50px;\n  background-size: cover;\n  background-repeat: no-repeat;\n  height: 18.75rem;\n  position: relative;\n  \n  @media (min-width: 920px) {\n    height: 25rem;\n    background-position: 0% 33%;\n  }\n`;\n\nconst HeroContent = styled.article`\n  position: relative;\n  top: 2rem;\n  width: 12.5rem;\n  background: ${({ theme }) => (theme === 'light' ? `${colors.tertiary}` : `${colors.mainBackgroundDarkMode}`)};\n  padding: 2rem;\n  text-align: left;\n  margin: 0 auto;\n\n  @media (min-width: 920px) {\n    position: absolute;\n    top: 3.125rem;\n    right: 3.125rem;\n    width: 18.75rem\n    margin: 2rem;\n  }\n`;\n\nconst HeroSubtitle = styled.p`\n  font-weight: bold;\n  font-size: 1rem;\n  margin: 0;\n\n  @media (min-width: 920px) {\n    font-size: 1.5rem;\n  }\n`;\n\nconst HeroText = styled.p`\n  margin-bottom: 0;\n  font-size: 0.9rem;\n\n  @media (min-width: 920px) {\n    font-size: 1.2rem;\n  }\n`;\n\n/**\n * Renders Hero Banner on Homepage\n * @function Hero\n * @returns {JSX}\n */\nconst Hero = () => {\n\n  // retrieve Redux state\n  const theme = useSelector(selectTheme)\n\n  return (\n    <HeroContainer>\n        <h1 className=\"sr-only\">Argent Bank - Welcome</h1>\n        <HeroContent theme={theme}>\n          <h2 className=\"sr-only\">Promoted Content</h2>\n          <HeroSubtitle>No fees.</HeroSubtitle>\n          <HeroSubtitle>No minimum deposit.</HeroSubtitle>\n          <HeroSubtitle>High interest rates.</HeroSubtitle>\n          <HeroText>Open a savings account with Argent Bank today!</HeroText>\n        </HeroContent>\n    </HeroContainer>\n    )\n}\n\nexport default Hero\n\n\n","\n// Data used for the \"features or slogans\" list on home page\nimport chat from '../assets/images/icon-chat.png'\nimport money from '../assets/images/icon-money.png'\nimport security from '../assets/images/icon-security.png'\n\nexport const featureData = [\n\t{\n\t\tid: \"f1\",\n    icon: chat,\n    altText: \"Chat\",\n\t\ttitle: \"You are our #1 priority\",\n\t\tcontent: \"Need to talk to a representative? You can get in touch through our 24/7 chat or through a phone call in less than 5 minutes.\"\n\t},\n\t{\n\t\tid: \"f2\",\n    icon: money,\n    altText: \"Money\",\n\t\ttitle: \"More savings means higher rates\",\n\t\tcontent: \"The more you save with us, the higher your interest rate will be!\"\n\t},\n\t\t{\n\t\tid: \"f3\",\n    icon: security,\n    altText: \"Security\",\n\t\ttitle: \"Security you can trust\",\n\t\tcontent: \"We use top of the line encryption to make sure your data and money is always safe.\"\n\t},\n]\n\n\n// 'Dummy' data used to fill in the user transaction page\n\nexport const AccountData = [\n\t{\n\t\tid: \"a1\",\n \t\ttitle: \"Argent Bank Checking (x8349)\",\n\t\tamount: 2082.79,\n    description: \"Available Balance\",\n \t},\n\t{\n\t\tid: \"a2\",\n \t\ttitle: \"Argent Bank Savings (x6712)\",\n\t\tamount: 10928.42,\n    description: \"Available Balance\",\n\t},\n\t\t{\n    id: \"a3\",\n    title: \"Argent Bank Credit Card (x8349)\",\n    amount: 184.30,\n    description: \"Current Balance\",\n\t},\n]","export default __webpack_public_path__ + \"static/media/icon-chat.e238539d.png\";","export default __webpack_public_path__ + \"static/media/icon-money.8ec88bb1.png\";","export default __webpack_public_path__ + \"static/media/icon-security.1c819fa1.png\";","import { useSelector } from 'react-redux'\n// styling\nimport styled from 'styled-components'\nimport colors from '../utils/style/colors'\n// import 'dummy' transaction data\nimport { featureData } from '../data/data'\n// import selector\nimport { selectTheme } from '../utils/selectors'\n\n/**\n * CSS for the component using styled.components\n */\n const Features = styled.section`\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: 920px) {\n    flex-direction: row;\n  }\n`;\n\nconst FeaturesItem = styled.article`\n  flex: 1;\n  padding: 2.5rem;\n`;\n\nconst FeaturesIcon = styled.img`\n  width: 100px;\n  border: 10px solid ${colors.primary};\n  border-radius: 50%;\n  padding: 1rem;\n`;\n\n const FeatureItemTitle = styled.h3`\n  color: ${({ theme }) => (theme === 'light' ? `${colors.itemTitle}` : `${colors.tertiary}`)};\n  font-size: 1.25rem;\n  font-weight: bold;\n  margin-bottom: 0.5rem;\n `;\n\n/**\n * Renders the three \"features/slogans\" of the bank on the home page\n * @function Feature\n * @returns {JSX}\n */\nconst Feature = () => {\n\n  // retrieve Redux state\n  const theme = useSelector(selectTheme)\n\n  return (\n    <Features>\n      <h2 className=\"sr-only\">Features</h2>\n      {featureData.map((data) => (\n        <FeaturesItem key={data.id}>\n          <FeaturesIcon src={data.icon} alt={data.altText} />\n          <FeatureItemTitle theme={theme}>{data.title}</FeatureItemTitle>\n          <p>{data.content}</p>\n        </FeaturesItem>\n        ))}\n    </Features>\n  )\n}\n\nexport default Feature\n\n","import { useEffect } from 'react'\nimport styled from 'styled-components'\n// import components\nimport Hero from '../components/Hero'\nimport Feature from '../components/Feature'\n\n/**\n * CSS for the component using styled.components\n */\n const MAIN = styled.main`\n  min-height: 85vh;\n`;\n\n/**\n * Renders the 'Welcome Page' \n * @function WelcomePage\n * @returns {JSX}\n */\nconst WelcomePage = () => {\n  \n  useEffect(() => {\n    document.title = 'Argent Bank'\n  }, [])\n\n  return (\n      <MAIN>\n        <Hero />\n        <Feature />\n      </MAIN>\n  )\n}\n\nexport default WelcomePage\n\n","import colors from '../style/colors'\nimport styled, { keyframes } from 'styled-components'\n\n/**\n * Keyframe for Loader component\n */\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\n/**\n * CSS for the Loader component\n */\n const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 1.25rem;\n`;\n\nconst Loader = styled.div`\n  animation: ${rotate} 1s infinite linear;\n  border: 0.5rem solid ${colors.primary};\n  border-bottom-color: transparent;\n  border-radius: 2rem;   \n  padding: 1px;\n  width: 1.25rem;\n  height: 1.25rem;\n`;\n\n/**\n * Renders a loading spinner icon\n * @function LoadingIcon\n * @returns {JSX}\n */\nconst LoadingIcon = () => {\n    return (\n      <LoaderWrapper>\n          <Loader /> \n      </LoaderWrapper>\n    )\n}\n\nexport default LoadingIcon\n\n\n","import { useEffect, useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { useSelector, useStore } from 'react-redux'\n// styling\nimport styled from 'styled-components'\nimport colors from '../utils/style/colors'\n// import component\nimport LoadingIcon from '../utils/loader/loadingIcon'\n// import function for API call\nimport { fetchToken } from '../features/fetchToken'\n// import selectors\nimport { selectTheme, selectToken } from '../utils/selectors'\n\n/**\n * CSS for the component using styled.components\n */\nconst MAIN = styled.main`\n  // background-color: ${colors.mainBackground};\n  background-color: ${({ theme }) => (theme === 'light' ? `${colors.mainBackground}` : `${colors.mainBackgroundDarkMode}`)};\n  min-height: 85vh;\n`;\n\nconst SignInContent = styled.section`\n  box-sizing: border-box;\n  background-color: ${({ theme }) => (theme === 'light' ? `${colors.tertiary}` : `${colors.darkModeHighlights}`)};\n  border: ${({ theme }) => (theme === 'light' ? `1px solid ${colors.tertiary}` : `1px solid ${colors.primary}`)};\n  max-width: 300px;\n  margin: 0 auto;\n  padding: 2rem;\n  position: relative;\n  top: 3rem;\n\n  i {\n    font-size: 1.5rem;\n  }\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n  margin-bottom: 1rem;\n\n  label {\n    font-weight: bold;\n  }\n\n  input {\n    margin-top: 0.313rem;\n    padding: 8px;\n    font-size: 1.2rem;\n    border-radius: 0.2rem;\n    border: 1px solid black;\n  }\n`;\n\nconst InputRemember = styled.div`\n  display: flex;\n\n  label {\n    margin-left: 0.25rem;\n  }\n`;\n\nconst ErrorMsg = styled.p`\n  margin-top: 0.313rem;\n  padding: 0.313rem;\n  color: ${colors.warning};\n  color: ${({ theme }) => (theme === 'light' ? `${colors.warning}` : `${colors.primary}`)};\n`;\n\nconst SignInButton = styled.button`\n  display: block;\n  width: 100%;\n  padding: 0.5rem;\n  font-size: 1.1rem;\n  font-weight: bold;\n  margin-top: 1rem;\n  cursor: pointer;\n  border-radius: 0.2rem;\n  border: none;\n  background-color: ${colors.primary};\n  color: ${colors.tertiary};\n  transition: 0.4s;\n\n  &:hover {\n    opacity: 0.85;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, .8);\n    transition: 0.4s;\n  }\n`;\n\n/**\n * Renders the 'SignIn page' & form\n * @function SignIn\n * @returns {JSX}\n */\nconst SignIn = () => {\n\n  // retrieve Redux state\n  const { isLoading, isLoggedIn, isError } = useSelector(selectToken)\n  const theme = useSelector(selectTheme)\n\n  // local states\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [rememberMe, setRememberMe] = useState(true)\n\n  const store = useStore()\n\n  useEffect(() => {\n    document.title = 'Argent Bank | Sign In'\n    // if user chose to be remembered then retrieve username from local storage\n    const rememberMe = localStorage.getItem('rememberMe') === 'true';\n    const user = rememberMe ? localStorage.getItem('user') : '';\n    setEmail(user)\n    setRememberMe(rememberMe)\n  }, [])\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    // if user chooses to be remembered then save to local storage\n    localStorage.setItem('rememberMe', rememberMe)\n    localStorage.setItem('user', rememberMe ? email : '')\n    // get authentication 'token' from API\n    fetchToken(store, email, password)\n  }\n\n  // Redirect to User transaction page when authenticated/LoggedIn\n  if (isLoggedIn) return <Redirect to=\"/user\" /> \n\n  return (\n      <MAIN theme={theme}>\n        <SignInContent theme={theme}>\n          <i className=\"fa fa-user-circle\"></i>\n          <h1>Sign In</h1>\n          <form onSubmit={handleSubmit}>\n\n            <InputWrapper>\n                <label htmlFor=\"email\">Username</label>\n                    <input type=\"text\" id=\"email\" \n                      autoComplete=\"email\"\n                      value={email}\n                      onChange={(e) => {setEmail(e.target.value)}} \n                      disabled={isLoading ? true : false}/>       \n              </InputWrapper>\n\n              <InputWrapper>\n                <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" \n                      autoComplete=\"off\"\n                      onChange={(e) => {setPassword(e.target.value)}}\n                      disabled={isLoading ? true : false} />\n              </InputWrapper>\n\n              <InputRemember>\n                  <input type=\"checkbox\" id=\"remember-me\" checked={rememberMe} \n                      onChange={() => setRememberMe(!rememberMe)} />\n                      <label htmlFor=\"remember-me\">Remember me</label>\n              </InputRemember>\n              {/* Show loading spinner whilst fetching data */}\n              {isLoading && <LoadingIcon />}\n              {/* Display error message if username or password error */}\n              <ErrorMsg theme={theme}>{isError}</ErrorMsg>\n\n            <SignInButton type=\"submit\" \n                disabled={isLoading ? true : false}>Sign In</SignInButton>\n\n          </form>  \n        </SignInContent>\n      </MAIN>\n  )\n}\n\nexport default SignIn\n","import { useSelector } from 'react-redux'\n// styling\nimport styled from 'styled-components'\nimport colors from '../utils/style/colors'\n// import 'dummy' transaction data\nimport { AccountData } from '../data/data.js'\n// import selector\nimport { selectTheme } from '../utils/selectors' \n\n /**\n * CSS for the component using styled.components\n */\n const Account = styled.article`\n display: flex;\n justify-content: space-between;\n align-items: center;\n border: ${({ theme }) => (theme === 'light' ? `1px solid ${colors.secondary}` : `1px solid ${colors.primary}`)};\n background-color:  ${({ theme }) => (theme === 'light' ? `${colors.tertiary}` : `${colors.darkModeHighlights}`)};\n width: 80%;\n margin: 0 auto;\n flex-direction: column;\n padding: 1.5rem;\n box-sizing: border-box;\n text-align: left;\n margin-bottom: 2rem;\n\n @media (min-width: 720px) {\n    flex-direction: row;\n }\n`;\n\nconst AccountWrapper = styled.div`\n width: 100%;\n flex: 1;\n`;\n\nconst AccountTitle = styled.h3`\n margin: 0;\n padding: 0;\n font-size: 1rem;\n font-weight: normal;\n`;\n\nconst AccountAmount = styled.div`\n margin: 0;\n font-size: 2.5rem;\n font-weight: bold;\n`;\n\nconst AccountAmountDescription = styled.div`\n margin: 0;\n`;\n\nconst AccountWrapperCta = styled.div`\n @media (min-width: 720px) {\n   flex: 0;\n  }\n`;\n\nconst TransactionButton = styled.button`\n display: block;\n width: 100%;\n padding: 8px;\n font-size: 1.1rem;\n font-weight: bold;\n margin-top: 1rem;\n border-radius: 0.2rem;\n border: none;\n background-color: ${colors.primary};\n color: ${colors.tertiary};\n cursor: pointer;\n transition: 0.4s;\n\n &:hover {\n  opacity: 0.85;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, .8);\n  transition: 0.4s;\n }\n\n @media (min-width: 720px) {\n   width: 200px;\n  }\n`;\n\n/**\n * Renders 'dummy' account transactions (to be replaced later...?)\n * @function Transactions\n * @returns {JSX}\n */\nconst Transactions = () => {\n\n  // retrieve Redux state\n  const theme = useSelector(selectTheme)\n\n  return (\n    <section>\n      <h2 className =\"sr-only\">Accounts</h2>\n        {AccountData.map((data) => (\n          <Account theme={theme} key={data.id}>\n            <AccountWrapper>\n              <AccountTitle>{data.title}</AccountTitle>\n              <AccountAmount>$ {data.amount.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2})}</AccountAmount>\n              <AccountAmountDescription>{data.description}</AccountAmountDescription>\n            </AccountWrapper>\n            <AccountWrapperCta>\n              <TransactionButton>View transactions</TransactionButton>\n            </AccountWrapperCta>\n          </Account>\n        ))}\n    </section>\n  )\n}\n\nexport default Transactions\n","import React, { useEffect, useState } from \"react\"\nimport styled from 'styled-components'\nimport colors from '../style/colors'\n/**\n * CSS for component using styled.components\n */\n const Wrapper = styled.div`\n padding-bottom: 0.8rem;\n color: ${colors.primary};\n`;\n\n/**\n * Renders a message for a limited time\n * @function Notify\n * @param {number} props: delay & message\n * @returns {JSX} visible 'message' passed as prop for 'delay' time\n */\nexport const Notify = props => {\n  const [visible, setVisible] = useState(true)\n\n  useEffect(() => {\n    setTimeout(() => {\n      setVisible(false)\n    }, props.delay)\n  }, [props.delay])\n\n  return visible ? <Wrapper>{props.children}</Wrapper> : <Wrapper />\n}\n\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useStore } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n// styling\nimport styled from 'styled-components'\nimport colors from '../utils/style/colors'\n// import components\nimport LoadingIcon from '../utils/loader/loadingIcon'\nimport Transactions from '../components/Transactions'\n// import functions for API calls\nimport { fetchUser } from '../features/fetchUpdateUser'\nimport { updateUser } from '../features/fetchUpdateUser'\n// import helper functions\nimport { capitalize } from '../utils/functions/capitalize'\nimport { Notify } from '../utils/functions/Notify'\n// import selectors\nimport { selectTheme, selectToken, selectUser } from '../utils/selectors'\n\n/**\n * CSS for component using styled.components\n */\n const MAIN = styled.main`\n//  background-color: ${colors.mainBackground};\n background-color: ${({ theme }) => (theme === 'light' ? `${colors.mainBackground}` : `${colors.mainBackgroundDarkMode}`)};\n min-height: 100vh;\n display: flex;\n flex-direction: column;\n\n @media (min-width: 720px) {\n  min-height: 85vh;\n}\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 85vh;\n`;\n\nconst UserInfo = styled.section`\n  color: ${colors.tertiary};\n  width: 100%;\n  margin-bottom: 1.5rem;\n\n  h1 {\n    font-size: 2rem;\n  }\n`;\n\nconst EditButton = styled.button`\n  padding: 0.625rem;\n  border-radius: 0.2rem;\n  border: none;\n  background-color: ${colors.primary};\n  color: ${colors.tertiary};\n  font-weight: bold;\n  padding: 0.625rem;\n  cursor: pointer;\n  transition: 0.4s;\n\n  &:hover {\n    opacity: 0.85;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, .8);\n    transition: 0.4s;\n  }\n`;\n\n/**\n * CSS for edit name form\n */\nconst EditContent = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  width: 100%;\n  margin: 0.625rem;\n  margin-bottom: 1rem;\n\n  @media screen and (min-width: 600px) {\n  flex-direction: row;\n  width: unset;\n  }\n\n  input {\n    padding: 0.5rem;\n    font-size: 1.2rem;\n    border-radius: 0.2rem;\n    border: 1px solid black;\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  width: 100%;\n  margin: 0.625rem;\n  margin-bottom: 1rem;\n\n  @media screen and (min-width: 425px) {\n    flex-direction: row;\n    width: unset;\n  }\n`;\n\nconst EditButtons = styled.button`\n  padding: 0.625rem;\n  font-weight: bold;\n  min-width: 100px;\n  cursor: pointer;\n  border-radius: 0.2rem;\n  border: none;\n  background-color: ${colors.primary};\n  color: ${colors.tertiary};\n  transition: 0.4s;\n\n  &:hover {\n    opacity: 0.85;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, .8);\n    transition: 0.4s;\n  }\n\n  @media screen and (min-width: 600px) {\n    width: 100px;\n  }\n`;\n\nconst ErrorMsg = styled.h1`\n  margin-top: 0.313rem;\n  padding: 0.313rem;\n  color: ${colors.tertiary};\n`;\n\n/**\n * Renders user page with possibility to edit user profile\n * @function User\n * @returns {JSX}\n */\nconst User = () => {\n\n  // retrieve Redux state\n  const theme = useSelector(selectTheme)\n  const { isLoggedIn, token } = useSelector(selectToken)\n  const { isLoading, isUpdated, isError } = useSelector(selectUser)\n  const { firstName, lastName  } = useSelector(selectUser).user\n\n  // local states\n  const [newFirst, setNewFirst] = useState('')\n  const [newLast, setnewLast] = useState('')\n  const [canEdit, setCanEdit] = useState(false)\n  const [submitted, setSubmitted] = useState(false)\n  const [inputOk, setInputOk] = useState(false)\n\n // ensure first letters of name capitalised\n  const capitalizedFirst = capitalize(firstName)\n  const capitalizedLast = capitalize(lastName)\n\n  const store = useStore()\n  \n  useEffect(() => {\n    document.title = 'Argent Bank | Welcome'\n    // load/fetch user data\n    fetchUser(store, token)\n  }, [store, token])\n\n  // submit form (if both name fields completed, otherwise indicate error)\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    setInputOk(false)\n    setSubmitted(true)\n    if (newFirst && newLast) {\n      if (newFirst.trim() !=='' && newLast.trim() !=='') {\n        updateUser(store, token, newFirst, newLast)\n        setInputOk(true)\n        setCanEdit(false)\n        }   \n    }\n  }\n\n  // reset variables if edit cancelled\n  const resetEdit = () => {\n    setNewFirst('')\n    setnewLast('')\n    setSubmitted(false)\n    setCanEdit(false)\n  }\n  \n  // if user not authenticated redirect to home page\n  if (!isLoggedIn) return <Redirect to=\"/\" /> \n\n  return (\n    <MAIN theme={theme}>\n      {/* Show load spinner whilst waiting for data */}\n      {isLoading ? <Wrapper>\n                      <LoadingIcon />\n                    </Wrapper> : \n        <React.Fragment>\n          {/* Display error message if there is a problem fetcthing the user data*/}\n          {isError ? <Wrapper>\n                        <ErrorMsg>Something went wrong, Please try again later...<br/> {isError}</ErrorMsg>\n                      </Wrapper> :  \n            <React.Fragment>\n              {/* Otherwise display user's information & transactions */}\n              <React.Fragment>\n                <UserInfo>\n                  <h1>Welcome back</h1>\n                  {canEdit ? (\n                    // Form to update user's name - if edit button pressed //\n                    <EditContent>\n                      <p className=\"sr-only\">Please enter your new name</p>\n                      <Form onSubmit={handleSubmit}> \n\n                        <InputWrapper>\n                          <label htmlFor=\"first\" className=\"sr-only\" >First Name</label>\n                              <input type=\"text\" id=\"first\"\n                                placeholder={capitalizedFirst}\n                                onChange={(e) => {setNewFirst(e.target.value)}} /> \n\n                              <label htmlFor=\"second\" className=\"sr-only\" >Surname</label>\n                              <input type=\"text\" id=\"second\"\n                                placeholder={capitalizedLast}\n                                onChange={(e) => {setnewLast(e.target.value)}}  />\n                        </InputWrapper>\n\n                      {/* Display error message if both names not entered*/}\n                      {submitted && !inputOk && <Notify delay=\"2000\">Please enter your full name.</Notify>}\n\n                        <ButtonWrapper>\n                          <EditButtons type=\"submit\" disabled={isLoading ? true : false}>Save</EditButtons> \n                          <EditButtons type=\"button\" onClick={resetEdit}>Cancel</EditButtons>\n                        </ButtonWrapper>\n                  \n                      </Form>  \n                    </EditContent>\n                    ) : (\n                      <React.Fragment>\n                        <h2>{capitalizedFirst}  {capitalizedLast} !</h2>\n                        {/* Display a generic error message if unable to update user details */}\n                        {submitted && !isUpdated && <Notify delay=\"3500\">Sorry there was a problem updating your details, please try again later...</Notify>}\n                        <EditButton onClick={() => setCanEdit(true)}>Edit Name</EditButton>\n                      </React.Fragment>\n                    )}\n                </UserInfo>\n                      {/* Transactions component displays 'dummy' transactions */}     \n                  <Transactions />   \n              </React.Fragment>  \n            </React.Fragment>\n          }\n        </React.Fragment>\n      }         \n    </MAIN>\n    )\n  }\n\nexport default User\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport colors from '../utils/style/colors'\n\n/**\n * CSS for the component using styled.components\n */\nconst ErrorWrapper = styled.main`\n  align-items: center;\n  color: ${colors.primary};\n  display: flex;\n  flex-direction: column;\n  min-height: 85vh;\n  \n  h1 {\n    font-size: clamp(6rem, 10vw, 15rem);\n    font-weight: 700;\n    margin: 6rem 0rem;\n  }\n\n  p {\n    font-size: clamp(1.125rem, 2vw, 2rem);\n    font-weight: 500;\n    margin-bottom: 5rem;\n    text-align: center;\n  }\n`;\n\nconst ReturnLink = styled(Link)`\n  color: ${colors.primary};\n  font-size: clamp(0.875rem, 1.5vw, 1.375rem);\n  font-weight: 500;\n  margin-bottom: 2rem;\n`;\n\n/**\n * Component to render Error 404 page\n * @function Error\n * @returns {JSX}\n */\nconst Error = () => {\n  \n  return (\n    <ErrorWrapper>\n      <h1>404</h1>\n      <p>Oops! The page you requested does not exist</p>\n      <ReturnLink to=\"/\">Return to the home page</ReturnLink>\n    </ErrorWrapper>\n  )\n}\n\nexport default Error\n\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n// component imports\nimport Header  from './components/HeaderNav'\nimport Footer from './components/Footer'\nimport WelcomePage from './pages/WelcomePage'\nimport SignIn from './pages/SignIn'\nimport User from './pages/User'\nimport Error from './pages/Error'\n\n/**\n * Manages routes & renders pages\n * @function App\n * @returns {JSX}\n */\nexport default function App() {\n  return (   \n    <Router basename='/StevensMark_P13_02122021/'>\n      <Header />  \n        <Switch>\n          <Route exact path=\"/\" component={WelcomePage}/>\n          <Route path=\"/signin\" component={SignIn}/>\n          <Route path=\"/user\" component={User}/>\n          <Route path=\"*\" component={Error} />\n        </Switch> \n      <Footer />\n    </Router>  \n  )\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport tokenReducer from '../../features/fetchToken'\nimport userReducer from '../../features/fetchUpdateUser'\nimport themeReducer from '../../features/theme'\n\n// create the store & put all reducers together\nexport default configureStore({\n    reducer: {\n      token: tokenReducer,\n      userStats: userReducer,\n      theme: themeReducer,\n    },\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from \"react-redux\"\nimport GlobalStyle from './utils/style/GlobalStyle'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n// import store\nimport store from '../src/utils/store/store'\n\nReactDOM.render(\n      // The Provider must encompass the entire application!\n    <Provider store={store}>\n        <React.StrictMode>\n              <GlobalStyle />\n              <App />\n        </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}